// import * as React from 'react'
// import { useState, useEffect } from 'react'
// import { useNavigate } from 'react-router-dom'
// import {
//   AppBar,
//   Box,
//   TableBody,
//   Table,
//   TableCell,
//   TableContainer,
//   TableHead,
//   Tabs,
//   Tab,
//   TablePagination,
//   TableRow,
//   // TableSortLabel,
//   Toolbar,
//   Typography,
//   Paper,
//   Checkbox,
//   IconButton,
//   Tooltip,
//   Button,
//   alpha,
//   Stack
// } from '@mui/material'
// import PropTypes from 'prop-types'
// import { visuallyHidden } from '@mui/utils'
// import { CustomTab, CustomToolbar, StyledTableCell } from '../../styles/CssStyled';
// import { fetchData } from '../../components/FetchData'
// import { getComparator, stableSort } from '../../components/Sorting'
// import { accountUrl } from '../../services/ApiUrls'
// import { Spinner } from '../../components/Spinner'
// import { FaChevronLeft, FaChevronRight, FaEdit, FaPlusCircle, FaTrashAlt } from 'react-icons/fa'
// import { DialogModal } from '../../components/DialogModal'
// import { Tags } from '../../components/Tags'
// import { UserDetails } from '../../components/UserDetails'

// // const AntTabs = styled(Tabs)({
// //   border: 'none',
// //   borderBottom: 'none',
// //   height: '3px',
// //   marginTop: '33px',
// //   marginLeft: '16px',
// //   overflow: 'hidden',
// //   '& .MuiTabs-indicator': {
// //     backgroundColor: '#1890ff'
// //   }
// // })

// // const AntTab = styled((props) =>
// //   <Tab disableRipple {...props} />)(({ theme }) => ({
// //   textTransform: 'none',
// //   marginRight: theme.spacing(1),
// //   color: 'white',
// //   borderRadius: '5px',
// //   backgroundColor: 'rgb(34, 61, 96)',
// //   fontWeight: 'bold',
// //   paddingTop: '1px',
// //   marginTop: '1px',
// //   '&:hover': {
// //     color: '#40a9ff',
// //     opacity: 1
// //   },
// //   '&.Mui-selected': {
// //     color: '#1890ff',
// //     backgroundColor: '#F0F7FF',
// //     fontWeight: 'bold'
// //   },
// //   '&.Mui-focusVisible': {
// //     backgroundColor: '#d1eaff'
// //   }
// // }))

// const headCells = [
//   {
//     id: 'name',
//     numeric: false,
//     disablePadding: false,
//     label: 'Name'
//   },
//   {
//     id: 'website',
//     numeric: false,
//     disablePadding: false,
//     label: 'Website'
//   },
//   {
//     id: 'created_by',
//     numeric: true,
//     disablePadding: false,
//     label: 'Created By'
//   },
//   {
//     id: 'country',
//     numeric: true,
//     disablePadding: false,
//     label: 'Country'
//   },
//   {
//     id: 'tags',
//     numeric: true,
//     disablePadding: false,
//     label: 'Tags'
//   },
//   {
//     id: 'actions',
//     numeric: true,
//     disablePadding: false,
//     label: 'Actions'
//   }
// ]

// function EnhancedTableHead(props: any) {
//   const {
//     onSelectAllClick, order, orderBy,
//     numSelected, rowCount,
//     numSelectedId, isSelectedId
//   } = props

//   // const createSortHandler = (property) => (event) => {
//   //   onRequestSort(event, property)
//   // }

//   return (
//     <TableHead>
//       <TableRow>
//         <TableCell padding='checkbox'>
//           <Checkbox
//             indeterminate={numSelected > 0 && numSelected < rowCount}
//             checked={
//               rowCount > 0 && numSelected === rowCount &&
//               numSelectedId.length > 0 && isSelectedId.length > 0
//             }
//             onChange={onSelectAllClick}
//             inputProps={{
//               'aria-label': 'select all desserts'
//             }}
//             sx={{ opacity: 0.5, color: 'inherit' }}
//           />
//         </TableCell>
//         {
//           headCells.map((headCell) => (
//             <TableCell
//               sx={{ fontWeight: 'bold', color: 'rgb(26, 51, 83)' }}
//               key={headCell.id}
//               align={headCell.numeric ? 'left' : 'left'}
//               padding={headCell.disablePadding ? 'none' : 'normal'}
//               sortDirection={orderBy === headCell.id ? order : false}
//             >
//               {/* <TableSortLabel
//               active={ orderBy === headCell.id }
//               direction={ orderBy === headCell.id ? order : 'asc' }
//               onClick={ createSortHandler(headCell.id) }
//             > */}
//               {headCell.label}
//               {orderBy === headCell.id
//                 ? (
//                   <Box component='span' sx={visuallyHidden}>
//                     {order === 'desc' ? 'sorted descending' : 'sorted ascending'}
//                   </Box>
//                 )
//                 : null}
//               {/* </TableSortLabel> */}
//             </TableCell>
//           ))
//         }
//       </TableRow>
//     </TableHead>
//   )
// }

// // EnhancedTableHead.propTypes = {
// //   numSelected: PropTypes.number.isRequired,
// //   onRequestSort: PropTypes.func.isRequired,
// //   onSelectAllClick: PropTypes.func.isRequired,
// //   order: PropTypes.oneOf(['asc', 'desc']).isRequired,
// //   orderBy: PropTypes.string.isRequired,
// //   rowCount: PropTypes.number.isRequired
// // }

// const EnhancedTableToolbar = (props: any) => {
//   const [isDelete, setIsDelete] = useState(false)
//   // const [setValue] = useState('1')
//   const { numSelected } = props

//   // const handleChange = (event, newValue) => {
//   //   setValue(newValue)
//   // }

//   const headers = {
//     Accept: 'application/json',
//     'Content-Type': 'application/json',
//     Authorization: `jwt ${localStorage.getItem('Token')}`,
//     org: localStorage.getItem('org')
//   }

//   const onDelete = (id: any) => {
//     fetchData(`${accountUrl}/${id}/`, 'delete', null as any, headers)
//       .then((data) => {
//         if (!data.error) {
//           props.getAccount()
//           setIsDelete(false)
//         }
//       })
//       .catch(() => {
//       })
//   }
//   function deleteHandle() {
//     setIsDelete(!isDelete)
//   }

//   const onclose = () => {
//     setIsDelete(!isDelete)
//   }

//   return (
//     <div>
//       <Toolbar
//         sx={{
//           pl: { sm: 2 },
//           pr: { xs: 1, sm: 1 },
//           ...(numSelected > 0 && {
//             bgcolor: (theme) =>
//               alpha(theme.palette.primary.main,
//                 theme.palette.action.activatedOpacity)
//           })
//         }}
//       >
//         {
//           numSelected > 0
//             ? (
//               <Tooltip title='Delete'>
//                 <Button
//                   variant='outlined'
//                   onClick={deleteHandle}
//                   startIcon={<FaTrashAlt color='error' />}
//                   color='inherit' sx={{ opacity: 0.7 }}
//                 >
//                   <Typography
//                     color='error'
//                     sx={{
//                       opacity: 1,
//                       fontWeight: 'bold',
//                       textTransform: 'capitalize'
//                     }}
//                   >Delete
//                   </Typography>
//                 </Button>
//               </Tooltip>
//             )
//             : (
//               <Tooltip title='Delete'>
//                 <Button
//                   variant='outlined'
//                   startIcon={<FaTrashAlt color='error' />}
//                   color='inherit' sx={{ opacity: 0.7 }}
//                 >
//                   <Typography
//                     color='error'
//                     sx={{
//                       opacity: 1,
//                       fontWeight: 'bold',
//                       textTransform: 'capitalize'
//                     }}
//                   > Delete
//                   </Typography>

//                 </Button>
//               </Tooltip>
//             )
//         }
//         {numSelected > 0
//           ? (
//             <Typography
//               sx={{ flex: '1 1 100%', margin: '5px' }}
//               color='inherit'
//               variant='subtitle1'
//               component='div'
//             >
//               {numSelected} selected
//             </Typography>
//           )
//           : ''}
//       </Toolbar>
//       {
//         isDelete
//           ? <DialogModal
//             accountData={props.numSelectedId}
//             numSelected={numSelected} isDelete={isDelete}
//             onClose={onclose}
//             onDelete={onDelete}
//             selectedCheckBx={props.isSelectedId}
//           />
//           : ''
//       }
//     </div>
//   )
// }
// // EnhancedTableToolbar.propTypes = {
// // numSelected: PropTypes.number.isRequired,
// // numSelectedId: PropTypes.array.isRequired,
// // iSelectedId: PropTypes.number.isRequired
// // }

// function TabPanel(props: any) {
//   const { children, value, index, ...other } = props
//   return (
//     <div
//       role='tabpanel'
//       hidden={value !== index}
//       id={`simple-tabpanel-${index}`}
//       aria-labelledby={`simple-tab-${index}`}
//       {...other}
//     >
//       {value === index && (
//         <Box sx={{ p: 3 }}>
//           <Typography>{children}</Typography>
//         </Box>
//       )}
//     </div>
//   )
// }

// // TabPanel.propTypes = {
// // children: PropTypes.node,
// // index: PropTypes.number.isRequired,
// // value: PropTypes.number.isRequired
// // }

// function a11yProps(index: any) {
//   return {
//     id: `simple-tab-${index}`,
//     'aria-controls': `simple-tabpanel-${index}`
//   }
// }

// export function Accounts(props: any) {
//   const [order, setOrder] = useState('asc')
//   const [orderBy, setOrderBy] = useState('Website')
//   const [value, setValue] = useState('Open')
//   const [initial, setInitial] = useState(true)
//   const [closeInitial, setCloseInitial] = useState([])
//   const [openOffset, setOpenOffset] = useState(0)
//   const [openValue] = useState(1)
//   const [closeOffset, setCloseOffset] = useState(0)
//   const [closeValue, setCloseValue] = useState(1)
//   const [selected, setSelected] = useState([])
//   const [selectedId, setSelectedId] = useState([])
//   const [isSelectedId, setIsSelectedId] = useState([])
//   const [setDeleteItems] = useState([])
//   const [page, setPage] = useState(0)
//   const [values, setValues] = useState(10)
//   const [dense] = useState(false)
//   const [rowsPerPage, setRowsPerPage] = useState(10)
//   const [accountData, setAccountData] = useState([])
//   const [deleteItemId, setDeleteItemId] = useState('')
//   const [isDelete, setIsDelete] = useState(false)
//   // const [filterItem, setFilterItem] = useState([])
//   const [loader, setLoader] = useState(true)
//   const navigate = useNavigate()

//   const handleChange = (event: any, newValue: any) => {
//     setValue(newValue)
//   }

//   const headers = {
//     Accept: 'application/json',
//     'Content-Type': 'application/json',
//     Authorization: `jwt ${localStorage.getItem('Token')}`,
//     org: localStorage.getItem('org')
//   }

//   const getAccount = () => {
//     fetchData(`${accountUrl}/?offset=${value === 'Open' ? openOffset : closeOffset}`, 'GET', null as any, headers)
//       .then((data) => {
//         if (!data.error) {
//           if (initial) {
//             // setAccountData(
//             //   // Object.assign({}, data, { cases: data.cases })
//             //   ...accountData, {
//             //   active_accounts: data.active_accounts,
//             //   open_accounts: data.active_accounts.open_accounts,
//             //   accountLength: data.active_accounts.open_accounts.length,
//             //   closed_accounts: data.closed_accounts,
//             //   closed_accounts_length: data.closed_accounts.close_accounts.length,
//             //   close_accounts: data.closed_accounts.close_accounts,
//             //   industries: data.industries,
//             //   tags: data.tags,
//             //   idActiveAccount: data.active_accounts.open_accounts.id,
//             //   per_page: data.active_accounts.open_accounts.per_page
//             // }
//             // )
//             setLoader(false)
//             setOpenOffset(initial ? 0 : openOffset)
//             setCloseOffset(initial ? 0 : closeOffset)
//             setInitial(false)
//           } else {
//             if (value === 'Open') {
//               // setAccountData({
//               //   active_accounts: data.active_accounts,
//               //   open_accounts: data.active_accounts.open_accounts,
//               //   accountLength: data.active_accounts.open_accounts.length,
//               //   closed_accounts: data.closed_accounts,
//               //   closed_accounts_length: data.closed_accounts.close_accounts.length,
//               //   close_accounts: data.closed_accounts.close_accounts,
//               //   industries: data.industries,
//               //   tags: data.tags,
//               //   idActiveAccount: data.active_accounts.open_accounts.id
//               // })
//               setLoader(false)
//               setOpenOffset(initial ? 0 : openOffset)
//             }
//             if (value === 'Close' || initial) {
//               // setAccountData({
//               //   active_accounts: data.active_accounts,
//               //   open_accounts: data.active_accounts.open_accounts,
//               //   accountLength: data.active_accounts.open_accounts.length,
//               //   closed_accounts: data.closed_accounts,
//               //   closed_accounts_length: data.closed_accounts.close_accounts.length,
//               //   close_accounts: data.closed_accounts.close_accounts,
//               //   industries: data.industries,
//               //   tags: data.tags,
//               //   idActiveAccount: data.active_accounts.open_accounts.id
//               // })
//               setCloseOffset(initial ? 0 : closeOffset)
//               setLoader(false)
//             }
//           }
//         }
//       })
//       .catch(() => {
//       })
//   }

//   useEffect(() => {
//     getAccount()
//   }, [closeOffset, openOffset])

//   const next = () => {
//     // if (value === 'Open' && accountData.accountLength > 0) {
//     //   setOpenOffset(values)
//     //   setValues(values + rowsPerPage)
//     // } else if (value === 'Close' && accountData.closed_accounts_length > closeOffset + 10) {
//     //   setCloseOffset(closeOffset + 10)
//     //   setCloseValue(closeValue + 10)
//     // }
//   }

//   const previous = () => {
//     // if (value === 0 && openOffset > 0) {
//     //   setOpenOffset(openOffset - rowsPerPage)
//     //   setValues(values - rowsPerPage)
//     // } else if (value === 1 && closeOffset > 0) {
//     //   setCloseOffset(closeOffset - 10)
//     //   setCloseValue(openValue - 10)
//     // }
//   }

//   const handleRequestSort = (event: any, property: any) => {
//     const isAsc = orderBy === property && order === 'asc'
//     setOrder(isAsc ? 'desc' : 'asc')
//     setOrderBy(property)
//   }

//   const handleSelectAllClick = (event: any) => {
//     if (event.target.checked) {
//       // const newSelecteds = accountData && accountData.open_accounts.map((n: any) => n.name)

//       // const newSelectedDelete = accountData && accountData.open_accounts.map((id: any) => id)

//       // const newSelectedDeleteId = accountData && accountData.open_accounts.map((item: any) => item.id)

//       // setSelected(newSelecteds)
//       // // setDeleteItems(selected)
//       // // setDeleteItems(newSelecteds)
//       // setSelectedId(newSelectedDelete)
//       // setIsSelectedId(newSelectedDeleteId)
//       return
//     }
//     setSelected([])
//     // setDeleteItems([])
//     setSelectedId([])
//     setIsSelectedId([])
//   }

//   // const handleClick = (event:any, name:any, ids:any, item:any) => {
//   //   const selectedWithId = selectedId.indexOf(ids)

//   //   let newItemDelete = []

//   //   if (selectedWithId === -1) {
//   //     newItemDelete = newItemDelete.concat(selectedId, ids)
//   //   } else if (selectedWithId === 0) {
//   //     newItemDelete = newItemDelete.concat(selectedId.slice(1))
//   //   } else if (selectedWithId === selected.length - 1) {
//   //     newItemDelete = newItemDelete.concat(selectedId.slice(0, -1))
//   //   } else if (selectedWithId > 0) {
//   //     newItemDelete = newItemDelete.concat(
//   //       selectedId.slice(0, selectedWithId),
//   //       selectedId.slice(selectedWithId + 1)
//   //     )
//   //   }
//   //   setSelectedId(newItemDelete)
//   //   const selectedWithNewId = isSelectedId.indexOf(item)
//   //   let newItemDeleteId = []
//   //   if (selectedWithNewId === -1) {
//   //     newItemDeleteId = newItemDeleteId.concat(isSelectedId, item)
//   //   } else if (selectedWithNewId === 0) {
//   //     newItemDeleteId = newItemDeleteId.concat(isSelectedId.slice(1))
//   //   } else if (selectedWithNewId === selected.length - 1) {
//   //     newItemDeleteId = newItemDeleteId.concat(isSelectedId.slice(0, -1))
//   //   } else if (selectedWithNewId > 0) {
//   //     newItemDeleteId = newItemDeleteId.concat(
//   //       isSelectedId.slice(0, selectedWithNewId),
//   //       isSelectedId.slice(selectedWithNewId + 1)
//   //     )
//   //   }
//   //   setIsSelectedId(newItemDeleteId)
//   //   const selectedIndex = selected.indexOf(name)
//   //   let newSelected = []
//   //   if (selectedIndex === -1) {
//   //     newSelected = newSelected.concat(selected, name)
//   //   } else if (selectedIndex === 0) {
//   //     newSelected = newSelected.concat(selected.slice(1))
//   //   } else if (selectedIndex === selected.length - 1) {
//   //     newSelected = newSelected.concat(selected.slice(0, -1))
//   //   } else if (selectedIndex > 0) {
//   //     newSelected = newSelected.concat(
//   //       selected.slice(0, selectedIndex),
//   //       selected.slice(selectedIndex + 1)
//   //     )
//   //   }
//   //   setSelected(newSelected)
//   //   setDeleteItems(newSelected)
//   // }

//   // const handleChangePage = (event, newPage) => {
//   //   setPage(newPage)
//   // }

//   const handleChangeRowsPerPage = (event: any) => {
//     setRowsPerPage(parseInt(event.target.value, 10))
//     setPage(0)
//     setValues(parseInt(event.target.value, 10))
//   }

//   // const handleChangeDense = (event) => {
//   //   setDense(event.target.checked)
//   // }

//   const deleteItemBox = (deleteId: any) => {
//     setDeleteItemId(deleteId)
//     setIsDelete(!isDelete)
//   }

//   const onclose = () => {
//     setIsDelete(!isDelete)
//   }

//   const onDelete = (id: any) => {
//     fetchData(`${accountUrl}/${id}/`, 'delete', null as any, headers)
//       .then((data) => {
//         if (!data.error) {
//           getAccount()
//           setIsDelete(false)
//         }
//       })
//       .catch(() => {
//       })
//   }

//   // const createSortHandlerBtn = (property) => (event) => {
//   //   setOrderBy(order)
//   //   handleRequestSort(event, property)
//   // }

//   // const isSelected = (name:any) => selected.indexOf(name) !== -1

//   // const emptyRows =
//   //   page > 0 ? Math.max(0, (1 + page) * rowsPerPage - (value === 0 ? accountData.accountLength : accountData.closed_accounts_length)) : 0

//   const onAddHandle = () => {
//     navigate('/accounts/add-accounts', {
//       // state: {
//       //   tags: accountData.tags,
//       //   industries: accountData.industries
//       // }
//     }
//     )
//   }

//   const accountHandle = (accountId: any) => {
//     navigate('/accounts/account-details', {
//       state: {
//         accounts: accountId.id
//       }
//     })
//   }

//   const EditItemBox = (editData: any) => {
//     navigate('/accounts/edit-accounts', {
//       state: {
//         editData: editData.id,
//         accountData: editData,
//         assign_to: editData.assigned_to.user_details,
//         tags: editData.tags,
//         leads: editData.lead,
//         teams: editData.teams
//       }
//     })
//   }
//   const handleChangeTab = (e: React.SyntheticEvent, val: any) => {
//     setValue(val)
//   }
//   const handleChangePage = (event: any, newPage: any) => {
//     setPage(newPage)
//   }
//   return (
//     <Box sx={{
//       mt: '60px'
//       // , width: '1376px'
//     }}>
//       <CustomToolbar>
//         <Tabs defaultValue={value} onChange={handleChangeTab} sx={{ mt: '27px' }}>
//           <CustomTab value="Open" label="Open"
//             sx={{
//               backgroundColor: value === 'Open' ? '#F0F7FF' : '#223d60',
//               color: value === 'Open' ? '#3f51b5' : 'white',
//             }}></CustomTab>
//           <CustomTab value="Closed" label="Closed"
//             sx={{
//               backgroundColor: value === 'Closed' ? '#F0F7FF' : '#223d60',
//               color: value === 'Closed' ? '#3f51b5' : 'white',
//               ml: '5px',
//             }}
//           ></CustomTab>
//         </Tabs>
//         <Stack sx={{ display: 'flex', flexDirection: 'row', alignItems: 'center' }}>
//           <Box
//             sx={{ mr: '-253px' }}
//           // sx={{ mr:'10px',display: 'flex',flexDirection: 'row',justifyContent: 'center',alignItems:'center',color: 'white'}}
//           >
//             <TablePagination
//               style={{ display: 'flex', flexDirection: 'row' }}
//               rowsPerPageOptions={[10, 20, 30, 40, 50]}
//               component='div'
//               labelRowsPerPage='Records Per Page'
//               // count={value === 0 ? accountData && accountData.open_accounts && accountData.open_accounts.length : accountData.close_accounts.length}
//               count={5}
//               rowsPerPage={rowsPerPage}
//               page={page}
//               size='small'
//               sx={{
//                 '.MuiTablePagination-toolbar': {
//                   paddingRight: '220px',
//                   // paddingLeft: '18px',
//                   minHeight: '30px',

//                 },
//                 '.MuiTablePagination-displayedRows': {
//                   display: 'none'
//                 },
//                 '.MuiTablePagination-actions': {
//                   display: 'none'
//                 },
//                 '.MuiTablePagination-selectLabel': {
//                   marginTop: '4px',
//                   marginLeft: '-15px',
//                   mb: '8px'
//                 },
//                 '.MuiTablePagination-select': {
//                   color: 'black',
//                   marginRight: '0px',
//                   marginLeft: '-12px',
//                   marginTop: '-3px'
//                 },
//                 '.MuiSelect-icon': {
//                   color: 'black',
//                   marginTop: '-2px'
//                 },
//                 backgroundColor: 'white',
//                 borderRadius: 1,
//                 height: '10%',
//                 overflow: 'hidden',
//                 p: 0,
//                 m: 0,
//                 width: '39%',
//                 pb: 5,
//                 color: 'black',
//                 mr: 1
//               }}
//               onPageChange={handleChangePage}
//               onRowsPerPageChange={handleChangeRowsPerPage}
//             />
//           </Box>
//           <Button
//             sx={{
//               backgroundColor: 'white',
//               textTransform: 'lowercase',
//               borderRadius: '7px',
//               mr: 1,
//               color: 'black',
//               '&:hover': {
//                 backgroundColor: 'white'
//               }
//             }}
//           >
//             <FaChevronLeft onClick={previous} style={{ backgroundColor: 'whitesmoke', fill: '#1A3353', marginRight: 1 }} />
//             <Typography sx={{ mt: 0, textTransform: 'lowercase', fontSize: '15px', color: '#1A3353' }}>
//               1 to 0
//               {/* {
//                   value === 0
//                     ? `${openOffset + 1} to
//                       ${accountData.accountLength > 0
//                       ? values
//                       : 0}`
//                     : `${closeOffset + 1} to
//                       ${closeInitial.closed_accounts_length >
//                       closeOffset + 10
//                       ? closeOffset + 10
//                       : 0}`
//                 } */}
//             </Typography>
//             <FaChevronRight onClick={next} style={{ backgroundColor: 'whitesmoke', fill: '#1A3353', marginLeft: 1 }} />
//           </Button>
//           <Button
//             onClick={onAddHandle}
//             type='submit'
//             variant='contained'
//             size='small'
//             startIcon={<FaPlusCircle style={{ fill: 'white', width: '14px', height: '14px',marginTop:'-1px' }} />}
//             style={{
//               textTransform: 'capitalize',
//               fontWeight: 'bold',
//               fontSize: '13px',
//               backgroundColor: 'rgb(28 16 215)',
//               marginRight: '6px'
//             }}
//           >
//             Add Accounts
//           </Button>
//         </Stack>
//       </CustomToolbar>
//       {/* <Box> */}
//       <Box sx={{ padding: '10px', marginTop: '5px' }}>
//         <TabPanel value={value} index={0}>
//           <Box sx={{ width: '100%', mt: 3 }}>
//             <Paper sx={{ width: '100%', mb: 2 }}>
//               <EnhancedTableToolbar
//                 // numSelected={selected.length}
//                 numSelectedId={selectedId}
//                 isSelectedId={isSelectedId}
//                 getAccount={getAccount}
//               />
//               <TableContainer>
//                 <Table
//                   sx={{ minWidth: 750 }}
//                   aria-labelledby='tableTitle'
//                   size={dense ? 'small' : 'medium'}
//                 >
//                   <EnhancedTableHead
//                     numSelected={selected.length}
//                     order={order}
//                     orderBy={orderBy}
//                     onSelectAllClick={handleSelectAllClick}
//                     onRequestSort={handleRequestSort}
//                     // rowCount={value === 0 ? accountData.accountLength : accountData.closed_accounts_length}
//                     rowCount={5}
//                     // numSelectedId={selectedId}
//                     isSelectedId={isSelectedId}
//                   />
//                   <TableBody>
//                     {/* {
//                       accountData && accountData.open_accounts
//                         ? stableSort(accountData && accountData.open_accounts, getComparator(order, orderBy))
//                           .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item, index) => {
//                             const isItemSelected = isSelected(item.name)

//                             const labelId = `enhanced-table-checkbox-${index}`
//                             return (
//                               <TableRow
//                                 tabIndex={-1}
//                                 key={index}
//                                 sx={{
//                                   border: 0,
//                                   '&:nth-of-type(even)': {
//                                     backgroundColor: '#F2F2F7'
//                                   },
//                                   color: 'rgb(26, 51, 83)'
//                                 }}
//                               >
//                                 <TableCell
//                                   padding='checkbox'
//                                   sx={{ border: 0, color: 'inherit' }}
//                                 >
//                                   <Checkbox
//                                     // onClick={(event) =>
//                                     //   handleClick(event, item.name, item, item.id)}
//                                     checked={isItemSelected}
//                                     inputProps={{
//                                       'aria-labelledby': labelId
//                                     }}
//                                     sx={{
//                                       border: 0,
//                                       color: 'inherit',
//                                       opacity: 0.5
//                                     }}
//                                   />
//                                 </TableCell>
//                                 <TableCell
//                                   component='th'
//                                   id={labelId}
//                                   scope='row'
//                                   sx={{ border: 0, color: 'rgb(26, 51, 83)', cursor: 'pointer' }}
//                                   onClick={() => accountHandle(item)}
//                                 >
//                                   {item.name}
//                                 </TableCell>
//                                 <TableCell
//                                   align='left'
//                                   sx={{ border: 0, color: 'rgb(26, 51, 83)' }}
//                                 >
//                                   {item.website ? item.website : '--'}
//                                 </TableCell>
//                                 <TableCell align='left' sx={{ border: 0, color: 'rgb(26, 51, 83)' }}>
//                                   {
//                                     item && item.created_by
//                                       ? <UserDetails created_by={item.created_by} />
//                                       : '--'
//                                   }
//                                 </TableCell>
//                                 <TableCell
//                                   align='left'
//                                   sx={{ border: 0, color: 'rgb(26, 51, 83)' }}
//                                 >
//                                   {item.billing_country ? item.billing_country : '---'}
//                                 </TableCell>
//                                 <TableCell
//                                   align='left'
//                                   sx={{ border: 0, color: 'rgb(26, 51, 83)' }}
//                                 >
//                                   <div style={{ display: 'flex' }}>
//                                     {
//                                       item.tags && item.tags.length > 0
//                                         ? item.tags.map((tagData:any) => (
//                                           <Tags tags={tagData} />
//                                         ))
//                                         : '--'
//                                     }
//                                   </div>
//                                 </TableCell>
//                                 <TableCell align='left' sx={{ border: 0 }}>
//                                   <IconButton>
//                                     <FaEdit onClick={() => EditItemBox(item)} style={{ fill: '#1A3353', cursor: 'pointer' }} />
//                                   </IconButton>
//                                   <IconButton>
//                                     <FaTrashAlt onClick={() => deleteItemBox(item)} style={{ fill: '#1A3353', cursor: 'pointer' }} />
//                                   </IconButton>
//                                 </TableCell>
//                               </TableRow>
//                             )
//                           })
//                         : ''
//                     } */}
//                     {/* {
//                       emptyRows > 0 && (
//                         <TableRow
//                           style={{
//                             height: (dense ? 33 : 53) * emptyRows
//                           }}
//                         >
//                           <TableCell colSpan={6} />
//                         </TableRow>
//                       )
//                     } */}
//                   </TableBody>
//                 </Table>
//               </TableContainer>
//             </Paper>
//             {
//               isDelete
//                 ? <DialogModal
//                   deleteItemId={deleteItemId} isDelete={isDelete}
//                   onClose={onclose}
//                   onDelete={onDelete}
//                 />
//                 : ' '
//             }
//           </Box>
//         </TabPanel>
//         <TabPanel
//           // value={value} 
//           index={1}>
//           <Box sx={{ width: '100%', mt: 3 }}>
//             <Paper sx={{ width: '100%', mb: 2 }}>
//               <EnhancedTableToolbar
//                 numSelected={selected.length}
//                 numSelectedId={selectedId}
//                 isSelectedId={isSelectedId}
//                 getAccount={getAccount}
//               />
//               <TableContainer>
//                 <Table
//                   sx={{ minWidth: 750 }}
//                   aria-labelledby='tableTitle'
//                   size={dense ? 'small' : 'medium'}
//                 >
//                   <EnhancedTableHead
//                     numSelected={selected.length}
//                     order={order}
//                     orderBy={orderBy}
//                     onSelectAllClick={handleSelectAllClick}
//                     onRequestSort={handleRequestSort}
//                     // rowCount={value === 0
//                     //   ? accountData.accountLength
//                     //   : accountData.closed_accounts_length}
//                     rowCount={5}
//                   // numSelectedId={selectedId}
//                   // isSelectedId={isSelectedId}
//                   />
//                   <TableBody>
//                     {/* {
//                       value !== 0 && accountData && accountData.close_accounts
//                         ? 
//                         accountData.close_accounts.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item:any, index:any) => {
//                           const isItemSelected = isSelected(item.name)
//                           const labelId = `enhanced-table-checkbox-${index}`
//                           return (
//                             <TableRow
//                               tabIndex={-1}
//                               key={index}
//                               sx={{
//                                 border: 0,
//                                 '&:nth-of-type(even)': {
//                                   backgroundColor: '#F2F2F7'
//                                 },
//                                 color: 'rgb(26, 51, 83)'
//                               }}
//                             >
//                               <TableCell
//                                 padding='checkbox'
//                                 sx={{ border: 0, color: 'inherit' }}
//                               >
//                                 <Checkbox
//                                   // onClick={(event:any) => handleClick(event, item.name, item, item.id)}
//                                   checked={isItemSelected}
//                                   inputProps={{
//                                     'aria-labelledby': labelId
//                                   }}
//                                   sx={{ border: 0, color: 'inherit', opacity: 0.5 }}
//                                 />
//                               </TableCell>
//                               <TableCell
//                                 component='th'
//                                 id={labelId}
//                                 scope='row'
//                                 padding='none'
//                                 sx={{ border: 0, color: ' rgb(26, 51, 83)' }}
//                               >
//                                 {item.name}
//                               </TableCell>
//                               <TableCell
//                                 align='left'
//                                 sx={{ border: 0, color: 'rgb(26, 51, 83)' }}
//                               >
//                                 {item.website ? item.website : '--'}
//                               </TableCell>
//                               <TableCell align='left' sx={{ border: 0, color: 'rgb(26, 51, 83)' }}>
//                                 {
//                                   item && item.created_by
//                                     ? <UserDetails created_by={item.created_by} />
//                                     : '--'
//                                 }
//                               </TableCell>
//                               <TableCell
//                                 align='left'
//                                 sx={{ border: 0, color: 'rgb(26, 51, 83)' }}
//                               >
//                                 {item.country ? item.country : '---'}
//                               </TableCell>
//                               <TableCell
//                                 align='left'
//                                 sx={{ border: 0, color: 'rgb(26, 51, 83)' }}
//                               >
//                                 {
//                                   item.tags.name
//                                     ? item.tags.map((tagData:any) => (
//                                       <Tags tags={tagData} />
//                                     ))
//                                     : '---'
//                                 }
//                               </TableCell>
//                               <TableCell align='left' sx={{ border: 0 }}>
//                                 <IconButton>
//                                   <FaEdit style={{ fill: '#1A3353' }} />
//                                 </IconButton>
//                                 <IconButton>
//                                   <FaTrashAlt onClick={() => deleteItemBox(item)} style={{ fill: '#1A3353' }} />
//                                 </IconButton>
//                               </TableCell>
//                             </TableRow>
//                           )
//                         })
//                         : ''
//                     } */}
//                     {/* {
//                       emptyRows > 0 && (
//                         <TableRow
//                           style={{
//                             height: (dense ? 33 : 53) * emptyRows
//                           }}
//                         >
//                           <TableCell colSpan={6} />
//                         </TableRow>
//                       )
//                     } */}
//                   </TableBody>
//                 </Table>
//               </TableContainer>
//             </Paper>
//             {
//               isDelete
//                 ? <DialogModal
//                   deleteItemId={deleteItemId}
//                   isDelete={isDelete}
//                   onClose={onclose}
//                   onDelete={onDelete}
//                 />
//                 : ' '
//             }
//           </Box>
//         </TabPanel>
//         {loader && <Spinner />}
//       </Box>

//     </Box>
//   )
// }
